#sales_router/src/authentication/api/authentication_api.py

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from authentication.api.routes import router as auth_router

# ==========================================================
# üß© Configura√ß√£o principal da aplica√ß√£o FastAPI
# ==========================================================
app = FastAPI(
    title="SalesRouter Authentication API",
    description="M√≥dulo de autentica√ß√£o multi-tenant do SalesRouter",
    version="1.1.0",

    # ‚úÖ Corrigido: mant√©m os caminhos padr√£o internos
    openapi_url="/openapi.json",
    docs_url="/docs",

    servers=[{"url": "/auth", "description": "Auth service behind API Gateway"}],
)

# ==========================================================
# üåç Middleware CORS
# ==========================================================
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ==========================================================
# üîÄ Rotas da API
# ==========================================================
app.include_router(auth_router)  # sem prefixo

# ==========================================================
# ü©∫ Health check / Root endpoint
# ==========================================================
@app.get("/", tags=["Status"])
def root():
    """Verifica se a API est√° online."""
    return {"status": "SalesRouter Authentication API online üöÄ"}
