# sales_router/docker-compose.yml

version: "3.9"

services:
  # ======================
  # Imagem base reutilizável
  # ======================
  base_image:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: psilas85/sales_router-base:latest

  # ======================
  # Autenticação (FastAPI)
  # ======================
  authentication_service:
    build:
      context: .
      dockerfile: ./src/authentication/Dockerfile.authentication
    container_name: authentication_service
    expose:
      - "8000"                       
    ports:
      - "8001:8000"               
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@sales_router_db:5432/sales_routing_db
      - JWT_SECRET_KEY=supersecretkey
      - JWT_ALGORITHM=HS256
      - TZ=America/Sao_Paulo
    depends_on:
      - sales_router_db
    volumes:
      - ./src/authentication:/app/authentication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - sales_router_net
    restart: always

  # ======================
  # Banco de Dados (PostgreSQL + PostGIS)
  # ======================
  sales_router_db:
    image: postgis/postgis:17-3.4
    container_name: sales_router_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sales_routing_db
    ports:
      - "5434:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - sales_router_net
    restart: always

  # ======================
  # Redis (Cache / Fila)
  # ======================
  redis:
    image: redis:7-alpine
    container_name: redis
    expose:
      - "6379"
    networks:
      - sales_router_net
    restart: always

  # ======================
  # API Gateway (Nginx)
  # ======================
  api_gateway:
    build:
      context: .
      dockerfile: ./src/api_gateway/Dockerfile.gateway
    container_name: api_gateway
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - authentication_service
    volumes:
      - ./src/api_gateway/nginx.conf:/etc/nginx/conf.d/sales_router.conf:ro
    networks:
      - sales_router_net
    restart: always



# ======================
# Volumes persistentes
# ======================
volumes:
  pg_data:

# ======================
# Rede compartilhada
# ======================
networks:
  sales_router_net:
    name: sales_router_net
    driver: bridge
