# sales_router/docker-compose.yml

version: "3.9"

services:
  # ======================
  # Imagem base reutilizável
  # ======================
  base_image:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: psilas85/sales_router-base:latest

  # ======================
  # Autenticação (FastAPI)
  # ======================
  authentication_service:
    build:
      context: .
      dockerfile: ./src/authentication/Dockerfile.authentication
    container_name: authentication_service
    expose:
      - "8000"
    ports:
      - "8001:8000"
    env_file:
      - .env              # ✅ carrega todas as variáveis do .env global
    depends_on:
      - sales_router_db
    volumes:
      - ./src/authentication:/app/authentication
    networks:
      - sales_router_net
    restart: always

  # ======================
  # Pré-processamento de PDVs
  # ======================
  pdv_preprocessing:
    build:
      context: .
      dockerfile: ./src/pdv_preprocessing/Dockerfile.pdv_preprocessing
    container_name: pdv_preprocessing
    env_file:
      - .env
    depends_on:
      - sales_router_db
      - redis
    volumes:
      - ./src/pdv_preprocessing:/app/src/pdv_preprocessing
      - ./data:/app/data
    networks:
      - sales_router_net
    restart: always


  # ======================
  # PDV Jobs Worker (RQ)
  # ======================
  pdv_jobs_worker:
    build:
      context: .
      dockerfile: ./src/pdv_preprocessing/Dockerfile.worker
    container_name: pdv_jobs_worker
    env_file:
      - .env
    depends_on:
      - redis
      - sales_router_db
    volumes:
      - ./src/pdv_preprocessing:/app/src/pdv_preprocessing
      - ./src/database:/app/src/database
      - ./data:/app/data
    networks:
      - sales_router_net
    restart: always

  # ======================
  # Clusterização de PDVs (Sales Clusterization)
  # ======================
  sales_clusterization:
    build:
      context: .
      dockerfile: ./src/sales_clusterization/Dockerfile.clusterization
    container_name: sales_clusterization
    env_file:
      - .env
    depends_on:
      - sales_router_db
      - redis
    volumes:
      - ./src/sales_clusterization:/app/src/sales_clusterization
      - ./src/database:/app/src/database
      - ./data:/app/data
    networks:
      - sales_router_net
    restart: always


  # ======================
  # Banco de Dados (PostgreSQL + PostGIS)
  # ======================
  sales_router_db:
    image: postgis/postgis:17-3.4
    container_name: sales_router_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sales_routing_db
    ports:
      - "5434:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - sales_router_net
    restart: always

  # ======================
  # Redis (Cache / Fila)
  # ======================
  redis:
    image: redis:7-alpine
    container_name: redis
    expose:
      - "6379"
    networks:
      - sales_router_net
    restart: always

  # ======================
  # API Gateway (Nginx)
  # ======================
  api_gateway:
    build:
      context: .
      dockerfile: ./src/api_gateway/Dockerfile.gateway
    container_name: api_gateway
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - authentication_service
    volumes:
      - ./src/api_gateway/nginx.conf:/etc/nginx/conf.d/sales_router.conf:ro
    networks:
      - sales_router_net
    restart: always



# ======================
# Volumes persistentes
# ======================
volumes:
  pg_data:

# ======================
# Rede compartilhada
# ======================
networks:
  sales_router_net:
    name: sales_router_net
    driver: bridge
